Q1:

include irvine32.inc
.data
var1 dword ?
var2 dword ?
var4 dword ?
temp dword ?
temp1 dword ?
x dword 5
y dword 3
v1 byte     "Enter the value of var1: ",0
v2 byte     "Enter the value of var2: ",0
result byte "The value in var4 is   : ",0
.code
main proc
mov eax,0
mov ebx,0
mov edx,offset v1
call writestring
call readdec
mov var1,eax
mov edx,offset v2
call writestring
call readdec
mov var2,eax
mov eax,var1
mul x
mov temp,eax
mov eax,var2
sub eax,3
mov temp1,eax
mov eax,temp
div temp1
mov var4,eax
mov edx,offset result
call writestring
call writedec
call crlf
exit
main endp
end main

Q2:

include irvine32.inc
.data
val1 dword ?
val2 dword ?
val3 dword ?
val4 dword ?
temp dword 5
temp1 dword ?
x dword ?
y dword ?
z dword ?
v2 byte     "Enter the value of var2: ",0
v3 byte     "Enter the value of var3: ",0
res byte    "The value in val1 is   : ",0
v4 byte     "The value in val4 is   : ",0
.code
main proc
mov eax,0
mov ebx,0
mov ecx,0
mov edx,0
mov edx,offset v2
call writestring
call readdec
mov val2,eax
mov edx,offset v3
call writestring
call readdec
mov val3,eax
mov edx,0
mov eax,val2
div val3
mov val1,eax
mov x,eax
mov edx,0
mov eax,val1
div val2
mov y,edx
mov eax,x
mul y
mov edx,offset res
call writestring
call writedec
mov eax,val1
mul temp
mov z,eax
mov eax,val2
mov edx,0
div val3
mov temp1,edx
mov eax,z
mov edx,0
div temp1
mov edx,offset v4
call crlf
call writestring
mov val4,eax
call writedec
call crlf
caLL crlf
exit
main endp
end main

Q3:

include irvine32.inc
.data
v1 byte ?
v2 byte ?
v3 byte ?
value byte "The value is: ",0
.code
main proc
mov eax,0
mov al,2
shl al,3
mov v1,al
mov al,2
shl al,1
mov v2,al
mov al,v1
add al,v2
mov v3,al
mov al,1
shl al,0
add al,v3
mov edx,offset value
call writestring
call writedec
call crlf
exit
main endp
end main

Q4:

include Irvine32.inc
.Data
.code
main proc
mov ax,-128
shl eax,16
sar eax,16
call writeint
call dumpregs
EXIT
main ENDP
END main
 

Q5:

include Irvine32.inc
.Data
var1 qword 2040506005619678h
var2 qword 9004200005899383h
.code
main proc
call Extended_Sub
call crlf
EXIT
main ENDP
Extended_Sub proc
mov eax,0
mov ebx,0
mov eax,dword ptr var1
mov ebx,dword ptr var2
sub eax,ebx
mov edx,eax
mov eax,dword ptr var1+4
mov ebx,dword ptr var2+4
sub eax,ebx
call dumpregs
ret
Extended_Sub endp
END main


Q6:

include irvine32.inc
.data
v1 byte "Enter the marks of student: ",0
v2 byte ?
ran byte "Sorry....! Marks are out of range 0->100."
result byte "You got this grade: ",0
.code
main proc
mov edx,0
mov eax,0
mov edx,offset v1
call writestring
call readdec
mov v1,al
cmp al,100
ja exi
cmp v1,90
jb n1
mov edx,offset result
call writestring
mov al,65
call writechar
call crlf
call crlf
exit
n1:
cmp al,80
jb n2
mov edx,offset result
call writestring
mov al,66
call writechar
call crlf
call crlf
exit
n2:
cmp al,70
jb n3
mov edx,offset result
call writestring
mov al,67
call writechar
call crlf
call crlf
exit
n3:
cmp al,60
jb n4
mov edx,offset result
call writestring
mov al,68
call writechar
call crlf
call crlf
exit
n4:
cmp al,0
jb exi
mov edx,offset result
call writestring
mov al,70
call writechar
call crlf
call crlf
exit
exi:
mov edx,offset ran
call writestring
call crlf
call crlf
exit
main endp
end main
end main

Q7:

NCLUDE IRVINE32.inc
.DATA
key BYTE -2,4,1,0,-3,5,2,-4,-4,6 
msg BYTE "This plaintext message will be encrypted",0
.CODE
main PROC
mov EAX,0
mov EBX,0
mov ECX,0
mov ESI,0
START:	
cmp key[ESI],0
jge L1
mov CL,key[ESI]
rol msg[ESI],CL
inc ESI
cmp ESI,lengthof msg
jz l2
jnz START
L1:	
mov CL,key[ESI]
ror msg[ESI],CL
inc ESI
cmp ESI,lengthof msg
jz l2
jnz START
l2:
mov EDX,offset msg
call writestring
call crlf	
EXIT
MAIN ENDP	
END MAIN